// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview A flow that suggests priests based on the service and location mentioned in the request.
 *
 * - suggestPriests - A function that handles the priest suggestion process.
 * - SuggestPriestsInput - The input type for the suggestPriests function.
 * - SuggestPriestsOutput - The return type for the suggestPriests function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestPriestsInputSchema = z.object({
  service: z.string().describe('The type of service the user is requesting.'),
  location: z.string().describe('The location where the service is needed.'),
  mobile: z.string().describe('The mobile number of the user requesting the service.'),
});
export type SuggestPriestsInput = z.infer<typeof SuggestPriestsInputSchema>;

const SuggestPriestsOutputSchema = z.object({
  suggestedPriests: z
    .array(z.string())
    .describe('A list of suggested priest IDs based on the request.'),
});
export type SuggestPriestsOutput = z.infer<typeof SuggestPriestsOutputSchema>;

export async function suggestPriests(input: SuggestPriestsInput): Promise<SuggestPriestsOutput> {
  return suggestPriestsFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestPriestsPrompt',
  input: {schema: SuggestPriestsInputSchema},
  output: {schema: SuggestPriestsOutputSchema},
  prompt: `You are an expert in suggesting priests based on the service and location requested by the user.

  Given the following service and location, suggest a list of priest IDs that would be suitable for the request.

  Service: {{{service}}}
  Location: {{{location}}}
  User Mobile: {{{mobile}}}

  Return a JSON array of priest IDs.
  `, // Ensure the prompt asks for a JSON array of priest IDs
});

const suggestPriestsFlow = ai.defineFlow(
  {
    name: 'suggestPriestsFlow',
    inputSchema: SuggestPriestsInputSchema,
    outputSchema: SuggestPriestsOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
